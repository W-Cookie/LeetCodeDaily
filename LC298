# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def longestConsecutive(self, root: Optional[TreeNode]) -> int:
        if not root:
            return 0
        queue = [(root,1)]
        res = 0
        while queue:
            cur, l = queue.pop(0)
            if res < l:
                res = l
            if cur.left:
                if cur.left.val - cur.val == 1:
                    queue.append((cur.left, l+1))
                else:
                    queue.append((cur.left, 1))   
            if cur.right:
                if cur.right.val - cur.val == 1:
                    queue.append((cur.right, l+1))
                else:
                    queue.append((cur.right, 1))  
        return res
        

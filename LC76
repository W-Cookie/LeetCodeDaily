class Solution:
    def minWindow(self, s, t):
        dict_t = {}
        for i in t:
            dict_t[i] = dict_t.get(i, 0) + 1
        dict_s = {}
        l, r = 0, 0
        formed = 0
        # ans tuple of the form (window length, left, right)
        ans = (float("inf"), None, None)
        while r<len(s):
            char = s[r]
            dict_s[char] = dict_s.get(char, 0) + 1
            if char in dict_t and dict_s[char] == dict_t[char]:
                formed += 1
            # find substring of t
            while l<=r and formed == len(dict_t):
                char = s[l]
                if r-l+1 < ans[0]:
                    ans = (r-l+1, l, r)
                dict_s[char] -= 1
                if char in dict_t and dict_s[char] < dict_t[char]:
                    formed -= 1
                l += 1
            r += 1
        return "" if ans[0] == float("inf") else s[ans[1] : ans[2] + 1]
            
                

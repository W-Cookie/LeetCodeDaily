class Solution:
    def divide(self, dividend: int, divisor: int) -> int:
        ################slow solution with O(n)
         # Constants
        MAX_INT = 2147483647        # 2**31 - 1
        MIN_INT = -2147483648       # -2**31

        # Special case: overflow.
        if dividend == MIN_INT and divisor == -1:
            return MAX_INT
        
        flag = 0
        if dividend<0 and divisor<0:
            dividend = -dividend
            divisor = -divisor
        elif dividend>0 and divisor<0:
            divisor = -divisor
            flag = 1
        elif dividend<0 and divisor>0:
            dividend = -dividend
            flag = 1
        
        quotient = 0
        while dividend >= divisor :
            # 2**0 = 1
            npower2 = 1
            value = divisor
            while dividend >= value + value:
                value += value
                npower2 += npower2
            quotient += npower2
            dividend -= value
        
        if flag == 1:
            return -quotient
        else:
            return quotient
            
            

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def zigzagLevelOrder(self, root: Optional[TreeNode]) -> List[List[int]]:
        if not root:
            return 
        dict = {}
        res = []
        queue = [(root,0)]
        while queue:
            cur, level = queue.pop(0)
            if level not in dict:
                dict[level] = [cur.val]
            else:
                dict[level].append(cur.val)

            if cur.left:
                queue.append((cur.left, level + 1))
            if cur.right:
                queue.append((cur.right, level + 1))
        
        for key in sorted(dict.keys()):
            if key%2 == 0:
                res.append(dict[key])
            else:
                res.append(dict[key][::-1])
        
        return res
                
        
        

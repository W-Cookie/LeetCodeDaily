# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def rotateRight(self, head: ListNode, k: int) -> ListNode:
        #base
        if not head:
            return None
        if not head.next:
            return head
        
        #close linked list to a ring
        oldtail = head
        n = 1
        while oldtail.next:
            oldtail = oldtail.next
            n += 1
        oldtail.next = head
        
        newtail = head
        for i in range(n-k%n -1):
            newtail = newtail.next
        newhead =newtail.next
        
        newtail.next = None
        return newhead
            
